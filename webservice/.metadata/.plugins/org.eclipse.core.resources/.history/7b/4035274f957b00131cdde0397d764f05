package webservice.resource;

import java.util.ArrayList;

import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.DELETE;
import javax.ws.rs.PUT;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.Consumes;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.Path;

import com.sun.jersey.api.core.HttpContext;
import com.sun.jersey.oauth.signature.OAuthSignatureException;

import webservice.database.DB_Connector;
import webservice.representations.Post;
import webservice.representations.User;
import webservice.security.AuthRequestFilter;
import webservice.security.Encryptor;

@Path("users")
public class UserResource {
	DB_Connector dbcon = DB_Connector.getInstance();
	
	@Context
	HttpContext context;
	
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public ArrayList<User> getUsers(){
		  dbcon.initDBConnection();
		  ArrayList<User> list = dbcon.getUsers();
		  System.out.println("used method getUsers");
		  return list;
	}
	
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	public boolean createUser(User user){
		dbcon.initDBConnection();
		String encrypted = Encryptor.get_SHA_1_SecurePassword(user.getPassword());
		user.setPassword(encrypted);
		System.out.println("used method createUser");
		return dbcon.createUser(user);
	}
	
	
	
	@GET
	@Path("/filter={name}")
	@Produces(MediaType.APPLICATION_JSON)
	public ArrayList<User> getUsersByName(@PathParam("name") String name){
		dbcon.initDBConnection();
		ArrayList<User> list = dbcon.getUsersByName(name);
		System.out.println("used method getUsersByName");
		return list;
	}
	
	@GET
	@Path("/{id}")
	@Produces(MediaType.APPLICATION_JSON)
	public User getSingleUser(@PathParam("id") int id){
		dbcon.initDBConnection();
		User user = dbcon.getSingleUser(id);
		System.out.println("used method getSingleUser");
		return user;
	}
	
	@PUT
	@Path("/{id}")
	@Consumes(MediaType.APPLICATION_JSON)
	public boolean changeUser(@PathParam("id") int id, User user){
		dbcon.initDBConnection();
		user.setID(id);
		System.out.println("used method changeUser");
		return dbcon.changeUser(user);
	}
	
	@DELETE
	@Path("/{id}")
	public boolean deleteUser(@PathParam("id") int id) throws OAuthSignatureException{
		AuthRequestFilter.verifyOAuth(context.getRequest());
		dbcon.initDBConnection();
		System.out.println("used method deleteUser");
		return dbcon.deleteUser(id);
	}
	
	@GET
	@Path("/{id}/posts")
	@Produces(MediaType.APPLICATION_JSON)
	public ArrayList<Post> getPostsByUser(@PathParam("id") int id){
		dbcon.initDBConnection();
		ArrayList<Post> list = dbcon.getPostsByUser(id);
		System.out.println("used method getPostsByUser");
		return list;
	}


}
